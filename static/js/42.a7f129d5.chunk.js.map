{"version":3,"file":"static/js/42.a7f129d5.chunk.js","mappings":"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","sources":["api/getMovies.js","components/BackLink/BackLink.jsx","components/MovieInformation/MovieInformation.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${params.toString()}&query=${query}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1), color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    transform: scale(1.03);\n    color: rgba(250, 170, 32, 1);\n  }\n`;\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'components/Loader';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieInformation = ({ movieDetails }) => {\n  const { genres, poster_path, title, release_date, vote_average, overview } =\n    movieDetails;\n\n  const movieGenres = () => {\n    const normalizedGenres = [];\n    genres.map(genre => normalizedGenres.push(genre.name));\n    return normalizedGenres.join(', ');\n  };\n\n  return (\n    <section>\n      <div style={{ display: 'flex', gap: '40px' }}>\n        <div>\n          <img\n            src={\n              poster_path\n                ? `${IMG_URL}${poster_path}`\n                : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n            }\n            alt={title}\n            width=\"500\"\n          />\n        </div>\n        <div style={{ maxWidth: '400px' }}>\n          {/* <h2>{movieDetails.title} ({movieDetails.release_date.slice(0, 4)})</h2> */}\n          <h1>\n            {title} ({new Date(release_date).getFullYear()})\n          </h1>\n          <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n\n          <div>\n            <p>Overview</p>\n            <p>{overview}</p>\n          </div>\n\n          <div>\n            <p>Genres</p>\n            <p>{movieGenres()}</p>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </section>\n  );\n};\n\nMovieInformation.propTypes = {\n  movieDetails: PropTypes.shape({\n    genres: PropTypes.array.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInformation;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport BackLink from 'components/BackLink';\nimport { getMovieDetails } from 'api/getMovies';\nimport MovieInformation from 'components/MovieInformation';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await getMovieDetails(id);\n      setMovieDetails(data);\n    };\n\n    getData();\n  }, [id]);\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  return (\n    <main>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      {movieDetails && <MovieInformation movieDetails={movieDetails} />}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","StyledLink","styled","Link","to","children","size","movieDetails","genres","poster_path","title","release_date","vote_average","overview","style","display","gap","src","alt","width","maxWidth","Date","getFullYear","toFixed","normalizedGenres","map","genre","push","name","join","movieGenres","Suspense","fallback","Loader","useParams","useState","setMovieDetails","useEffect","getData","data","location","useLocation","backLinkHref","useRef","state","from","current"],"sourceRoot":""}