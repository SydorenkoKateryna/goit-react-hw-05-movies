{"version":3,"file":"static/js/522.e6b68f79.chunk.js","mappings":"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","sources":["api/getMovies.js","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${params.toString()}&query=${query}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, poster_path, title }) => {\n        return (\n          <li key={id}>\n            <Link\n              to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n            >\n              <div>\n                <img\n                  src={\n                    poster_path\n                      ? `${IMG_URL}${poster_path}`\n                      : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                  }\n                  alt={title}\n                  width=\"500\"\n                />\n              </div>\n              <h2>{title}</h2>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n  color: #fff;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0);\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-family: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  &::placeholder {\n    font-family: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  border-left: 1px solid rgb(0, 0, 0);\n  background-color: rgba(250, 170, 32, 0.8);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    transform: scale(1.03);\n    background-color: rgba(250, 170, 32, 1);\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Wrapper, Input, Form, Button } from './Searchbar.styled';\nimport { FiSearch } from 'react-icons/fi';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const normalizedValue = value.trim();\n\n    if (normalizedValue === '') {\n      toast.info('Please, enter keywords to find a movie.');\n      return;\n    }\n\n    onSubmit(normalizedValue);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Find a movie to watch...\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n        <Button type=\"submit\">\n          <FiSearch size={24} />\n        </Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList';\nimport Searchbar from 'components/Searchbar';\nimport { getSearchMovies } from 'api/getMovies';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n\n    const getData = async () => {\n      const {\n        data: { results },\n      } = await getSearchMovies(movieName);\n      setSearchMovies(results);\n    };\n\n    getData();\n  }, [movieName]);\n\n  return (\n    <main>\n      <Searchbar onSubmit={updateQueryString} />\n      {searchMovies && <MovieList movies={searchMovies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","movies","location","useLocation","map","poster_path","title","to","pathname","state","from","src","alt","width","Wrapper","styled","Form","Input","Button","onSubmit","useState","value","setValue","e","preventDefault","normalizedValue","trim","toast","type","autoComplete","autoFocus","placeholder","onChange","target","size","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","getData","results","data","MovieList"],"sourceRoot":""}