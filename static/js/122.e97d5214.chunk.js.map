{"version":3,"file":"static/js/122.e97d5214.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAS,IAAIC,gBAAgB,CACjCC,QAAS,mCACTC,KAAM,IAGKC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBN,EADkB,8BACYC,EAAOM,aAFX,UAKP,OAJlBC,EADyB,QAKlBC,OALkB,sBAMvB,IAAIC,MAAMF,EAASC,QANI,gCASxBD,GATwB,2CAAH,qDAYjBG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,YACMX,EAAOM,aAFP,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFlB,UAKF,OAJlBC,EADoB,QAKbC,OALa,sBAMlB,IAAIC,MAAMF,EAASC,QAND,gCASnBD,GATmB,2CAAH,sDAYZM,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFf,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfO,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,UAClBN,EADkB,yBACOC,EAAOM,WADd,kBACkCS,IAF5B,UAKL,OAJlBR,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,qD,+JCR5B,EA3CgB,WACd,IAAQI,GAAOK,EAAAA,EAAAA,MAAPL,GACR,GAAkCM,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEb,IAAMI,EAAO,mCAAG,uGAGJV,EAAAA,EAAAA,IAAgBF,GAHZ,gBAEJa,EAFI,EAEZC,KAAQD,QAEVH,EAAgBG,GAChBL,GAAa,GALC,2CAAH,qDAQbI,GACD,GAAE,CAACZ,KAGF,gCACGO,IAAa,SAACQ,EAAA,EAAD,MAEXN,IAAiBA,EAAaO,UAAYT,IAC3C,uBAAG,8CAGJE,IAAiBF,IAChB,wBACGE,EAAaQ,KAAI,YAA8B,IAA3BjB,EAA0B,EAA1BA,GAAIkB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGnB,EAKZ,QAKV,C","sources":["api/getMovies.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${params.toString()}&query=${query}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/getMovies';\nimport Loader from 'components/Loader';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getData = async () => {\n      const {\n        data: { results },\n      } = await getMovieReviews(id);\n      setMovieReviews(results);\n      setIsLoading(false);\n    };\n\n    getData();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {(!movieReviews || !movieReviews.length) && !isLoading && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n\n      {movieReviews && !isLoading && (\n        <ul>\n          {movieReviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","useParams","useState","isLoading","setIsLoading","movieReviews","setMovieReviews","useEffect","getData","results","data","Loader","length","map","author","content"],"sourceRoot":""}