{"version":3,"file":"static/js/93.9f8bbfc5.chunk.js","mappings":"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","sources":["api/getMovies.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ee704e183d11b50a0d8be9a20340402f';\n\nexport const getTrendingMovies = async page => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const Info = styled.p`\n  margin-top: 20px;\n\n  font-weight: 500;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 18px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(1, minmax(240px, 336px));\n  grid-row-gap: 20px;\n  max-height: 505px;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(4, 161px);\n    grid-column-gap: 20px;\n    grid-row-gap: 20px;\n    max-height: 655px;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    grid-template-columns: repeat(5, 226px);\n    grid-column-gap: 21.5px;\n    max-height: 940px;\n  }\n`;\n\nexport const Item = styled.li`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  text-transform: uppercase;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 402px;\n  object-fit: cover;\n  border-radius: 2px;\n\n  @media (min-width: 768px) {\n    max-width: 161px;\n    width: 100%;\n    height: 240px;\n  }\n  @media (min-width: 1280px) {\n    max-width: 226px;\n    width: 100%;\n    height: 350px;\n  }\n`;\n\nexport const Name = styled.h3`\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nexport const Character = styled.p``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'api/getMovies';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\nimport { Info, List, Item, Image, Name, Character } from './Cast.styled';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMAGE =\n  'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieCast, setMovieCast] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getData = async () => {\n      try {\n        const response = await getMovieCast(id);\n        const {\n          data: { cast },\n        } = response;\n        setMovieCast(cast);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {error && <Error message={error.message} />}\n\n      {(!movieCast || !movieCast.length) && !isLoading && !error && (\n        <Info>\n          Unfortunately, we don't have any cast information for this movie.\n        </Info>\n      )}\n\n      {movieCast && !isLoading && !error && (\n        <List>\n          {movieCast.map(({ id, profile_path, original_name, character }) => {\n            return (\n              <Item key={id}>\n                <Image\n                  alt={original_name}\n                  src={\n                    profile_path ? `${IMG_URL}${profile_path}` : DEFAULT_IMAGE\n                  }\n                  onError={({ currentTarget }) => {\n                    currentTarget.onerror = null;\n                    currentTarget.src = DEFAULT_IMAGE;\n                  }}\n                />\n                <Name>{original_name}</Name>\n                <Character>Character: {character}</Character>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Message = styled.strong`\n  display: block;\n  padding-top: 20px;\n  padding-bottom: 40px;\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.color};\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    padding-bottom: 60px;\n    font-size: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Error.styled';\n\nconst Error = ({ message }) => {\n  return <Message>Sorry, there was an error. {message}.</Message>;\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Error;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","page","axios","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","Info","styled","List","Item","Image","Name","Character","DEFAULT_IMAGE","useParams","useState","isLoading","setIsLoading","movieCast","setMovieCast","error","setError","useEffect","getData","cast","data","Loader","message","length","map","profile_path","original_name","character","alt","src","onError","currentTarget","onerror","Message","theme","colors","color"],"sourceRoot":""}