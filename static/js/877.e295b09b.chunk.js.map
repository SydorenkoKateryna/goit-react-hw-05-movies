{"version":3,"file":"static/js/877.e295b09b.chunk.js","mappings":"uRAEMA,EAAW,gCACXC,EAAS,IAAIC,gBAAgB,CACjCC,QAAS,mCACTC,KAAM,IAGKC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBN,EADkB,8BACYC,EAAOM,aAFX,UAKP,OAJlBC,EADyB,QAKlBC,OALkB,sBAMvB,IAAIC,MAAMF,EAASC,QANI,gCASxBD,GATwB,2CAAH,qDAYjBG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,YACMX,EAAOM,aAFP,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFlB,UAKF,OAJlBC,EADoB,QAKbC,OALa,sBAMlB,IAAIC,MAAMF,EAASC,QAND,gCASnBD,GATmB,2CAAH,sDAYZM,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFf,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,qD,+ICD5B,EArCa,WACX,IAAQI,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAAkCI,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,uGAGJP,EAAAA,EAAAA,IAAaD,GAHT,gBAEJS,EAFI,EAEZC,KAAQD,KAEVH,EAAaG,GAJC,2CAAH,qDAObD,GACD,GAAE,CAACR,KAGF,8BACGK,IACC,wBACGA,EAAUM,KAAI,SAAAF,GACb,OACE,2BACE,gBACEG,IAAG,UAzBL,mCAyBK,OAAeH,EAAKI,cACvBC,IAAKL,EAAKM,iBAEZ,wBAAKN,EAAKM,iBACV,yBAAG,cAAYN,EAAKO,eANbP,EAAKT,GASjB,OAKV,C","sources":["api/getMovies.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'api/getMovies';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      const {\n        data: { cast },\n      } = await getMovieCast(id);\n      setMovieCast(cast);\n    };\n\n    getData();\n  }, [id]);\n\n  return (\n    <>\n      {movieCast && (\n        <ul>\n          {movieCast.map(cast => {\n            return (\n              <li key={cast.id}>\n                <img\n                  src={`${IMG_URL}${cast.profile_path}`}\n                  alt={cast.original_name}\n                />\n                <h3>{cast.original_name}</h3>\n                <p>Character: {cast.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","useParams","useState","movieCast","setMovieCast","useEffect","getData","cast","data","map","src","profile_path","alt","original_name","character"],"sourceRoot":""}