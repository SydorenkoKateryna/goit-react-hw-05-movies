{"version":3,"file":"static/js/415.aa6f3450.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAS,IAAIC,gBAAgB,CACjCC,QAAS,mCACTC,KAAM,IAGKC,EAAiB,mCAAG,WAAMD,GAAN,gFACzBE,EAA0B,IAAIJ,gBAAgB,CAClDC,QAAS,mCACTC,KAAAA,IAH6B,SAMRG,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYM,EAAwBE,aAP5B,UAUP,OAJlBC,EANyB,QAUlBC,OAVkB,sBAWvB,IAAIC,MAAMF,EAASC,QAXI,gCAcxBD,GAdwB,2CAAH,sDAiBjBG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAa,EADA,YACMZ,EAAOO,aAFP,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAa,EADA,oBACcZ,EAAOO,aAFlB,UAKF,OAJlBC,EADoB,QAKbC,OALa,sBAMlB,IAAIC,MAAMF,EAASC,QAND,gCASnBD,GATmB,2CAAH,sDAYZM,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAa,EADA,oBACcZ,EAAOO,aAFf,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfO,EAAe,mCAAG,WAAOC,EAAOb,GAAd,gFACvBc,EAAwB,IAAIhB,gBAAgB,CAChDC,QAAS,mCACTC,KAAAA,IAH2B,SAMNG,EAAAA,EAAAA,IAAA,UAClBP,EADkB,yBACOkB,EAAsBV,WAD7B,kBACiDS,IAP3C,UAUL,OAJlBR,EANuB,QAUhBC,OAVgB,sBAWrB,IAAIC,MAAMF,EAASC,QAXE,gCActBD,GAdsB,2CAAH,uD,sEC3DfU,E,QAAUC,GAAAA,OAAH,uZ,SCSpB,EARc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,UAACF,EAAD,WAAS,8BAA4BE,EAAQ,MACrD,C,gHCHYC,EAAUF,EAAAA,GAAAA,QAAH,2KAUPG,EAAOH,EAAAA,GAAAA,GAAH,ubAoBJI,EAAOJ,EAAAA,GAAAA,GAAH,oTACK,qBAAGK,MAAkBC,OAAOC,cAA5B,IAaTC,EAAQR,EAAAA,GAAAA,IAAH,sNAcLS,EAAQT,EAAAA,GAAAA,GAAH,gQAaLU,EAAcV,EAAAA,GAAAA,IAAH,8CAIXW,EAAcX,EAAAA,GAAAA,GAAH,0PAKb,qBAAGK,MAAkBC,OAAOM,KAA5B,I,SCpBX,EAhDkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACd,EAAD,WACGY,IAAS,SAACL,EAAD,UAAQK,KAElB,SAACX,EAAD,UACGU,EAAOI,KAAI,YAAiC,IAA9BxB,EAA6B,EAA7BA,GAAIyB,EAAyB,EAAzBA,YAAaJ,EAAY,EAAZA,MAC9B,OACE,SAACV,EAAD,WACE,UAAC,KAAD,CACEe,GAA0B,MAAtBJ,EAASK,SAAT,iBAAsC3B,GAAtC,UAAgDA,GACpD4B,MAAO,CAAEC,KAAMP,GAFjB,WAIE,SAACP,EAAD,CACEe,IACEL,EAAW,UAnBf,mCAmBe,OACMA,GACb,kHAENM,IAAKV,KAEP,SAACJ,EAAD,WACE,SAACC,EAAD,UACGG,EAAMW,QAAU,GAAKX,EAArB,UAAgCA,EAAMY,MAAM,EAAG,IAA/C,gBAfEjC,EAqBd,QAIR,C,6IC0BD,UArEa,WACX,OAA4CkC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAO3C,EAAP,KAAagD,EAAb,KACA,GAAwCL,EAAAA,EAAAA,UAAS,MAAjD,eAAOM,EAAP,KAAqBC,EAArB,KAGMC,EAAYC,KAAKC,KAAKJ,EAAeA,EAFtB,GAEoD,GAkCzE,OA5BAK,EAAAA,EAAAA,YAAU,WAKR,IAAMC,EAAO,mCAAG,oHAEWtD,EAAAA,EAAAA,IAAkBD,GAF7B,OAENK,EAFM,SAMRA,EADFmD,KAAQC,EALE,EAKFA,QAASC,EALP,EAKOA,cAGnBb,EAAkBY,GAGhBP,EADEQ,EAAgB,IACF,IAEAA,GAbN,gDAgBZX,EAAS,EAAD,IAhBI,yDAAH,qDAoBbQ,GACD,GAAE,CAACvD,KAGF,kBAAM2D,MAAO,CAAEC,cAAe,QAA9B,UACGd,IAAS,SAAC,IAAD,CAAO7B,QAAS6B,EAAM7B,UAE/B2B,IACC,iCACE,SAAC,IAAD,CAAWf,OAAQe,EAAgBd,MAAM,mBACxCqB,EAAY,IACX,SAAC,IAAD,CACEU,WAAW,MACXC,UAAU,eACVC,aA3CY,SAAAC,GACtBhB,EAAQgB,EAAMC,SAAW,EAC1B,EA0CWC,mBAAoB,EACpBf,UAAWA,EACXgB,cAAc,eACdC,sBAAuB,KACvBC,mBAAmB,kBACnBC,kBAAkB,uBAClBC,gBAAgB,0BAO7B,C","sources":["api/getMovies.js","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async page => {\n  const paramsForTrendingMovies = new URLSearchParams({\n    api_key: 'ee704e183d11b50a0d8be9a20340402f',\n    page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${paramsForTrendingMovies.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const paramsForSearchMovies = new URLSearchParams({\n    api_key: 'ee704e183d11b50a0d8be9a20340402f',\n    page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${paramsForSearchMovies.toString()}&query=${query}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.strong`\n  display: block;\n  padding-top: 20px;\n  padding-bottom: 40px;\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  text-align: center;\n  color: #212121;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    padding-bottom: 60px;\n    font-size: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Error.styled';\n\nconst Error = ({ message }) => {\n  return <Message>Sorry, there was an error. {message}.</Message>;\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    padding-bottom: 60px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(240px, 336px));\n  grid-row-gap: 20px;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(2, 336px);\n    grid-column-gap: 32px;\n    grid-row-gap: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    grid-template-columns: repeat(3, 395px);\n    grid-column-gap: 16px;\n    grid-row-gap: 32px;\n  }\n`;\n\nexport const Item = styled.li`\n  background-color: ${({ theme }) => theme.colors.cardBackground};\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: 0 2 10px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 402px;\n  object-fit: cover;\n\n  @media (min-width: 768px) {\n    height: 455px;\n  }\n  @media (min-width: 1280px) {\n    height: 574px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  padding: 16px 8px;\n`;\n\nexport const SecondTitle = styled.h2`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.color};\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 18px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Section,\n  List,\n  Item,\n  Image,\n  Title,\n  InfoWrapper,\n  SecondTitle,\n} from './MovieList.styled';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieList = ({ movies, title }) => {\n  const location = useLocation();\n\n  return (\n    <Section>\n      {title && <Title>{title}</Title>}\n\n      <List>\n        {movies.map(({ id, poster_path, title }) => {\n          return (\n            <Item key={id}>\n              <Link\n                to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n                state={{ from: location }}\n              >\n                <Image\n                  src={\n                    poster_path\n                      ? `${IMG_URL}${poster_path}`\n                      : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                  }\n                  alt={title}\n                />\n                <InfoWrapper>\n                  <SecondTitle>\n                    {title.length <= 30 ? title : `${title.slice(0, 30)} ...`}\n                  </SecondTitle>\n                </InfoWrapper>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </Section>\n  );\n};\n\nMovieList.propTypes = {\n  title: PropTypes.string,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'api/getMovies';\nimport ReactPaginate from 'react-paginate';\nimport MovieList from 'components/MovieList';\nimport Error from 'components/Error';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [error, setError] = useState(null);\n\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(null);\n  const itemsPerPage = 20;\n\n  const pageCount = Math.ceil(totalResults ? totalResults / itemsPerPage : 0);\n\n  const handlePageClick = event => {\n    setPage(event.selected + 1);\n  };\n\n  useEffect(() => {\n    // if (trendingMovies) {\n    //   return;\n    // }\n\n    const getData = async () => {\n      try {\n        const response = await getTrendingMovies(page);\n\n        const {\n          data: { results, total_results },\n        } = response;\n\n        setTrendingMovies(results);\n\n        if (total_results > 10000) {\n          setTotalResults(10000);\n        } else {\n          setTotalResults(total_results);\n        }\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    getData();\n  }, [page]);\n\n  return (\n    <main style={{ paddingBottom: '60px' }}>\n      {error && <Error message={error.message} />}\n\n      {trendingMovies && (\n        <>\n          <MovieList movies={trendingMovies} title=\"Trending today\" />\n          {pageCount > 1 && (\n            <ReactPaginate\n              breakLabel=\"...\"\n              nextLabel=\"🡲\"\n              onPageChange={handlePageClick}\n              pageRangeDisplayed={1}\n              pageCount={pageCount}\n              previousLabel=\"🡰\"\n              renderOnZeroPageCount={null}\n              containerClassName=\"containerStyled\"\n              disabledClassName=\"disabledButtonStyled\"\n              activeClassName=\"activePageStyled\"\n            />\n          )}\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","paramsForTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","paramsForSearchMovies","Message","styled","message","Section","List","Item","theme","colors","cardBackground","Image","Title","InfoWrapper","SecondTitle","color","movies","title","location","useLocation","map","poster_path","to","pathname","state","from","src","alt","length","slice","useState","trendingMovies","setTrendingMovies","error","setError","setPage","totalResults","setTotalResults","pageCount","Math","ceil","useEffect","getData","data","results","total_results","style","paddingBottom","breakLabel","nextLabel","onPageChange","event","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","disabledClassName","activeClassName"],"sourceRoot":""}