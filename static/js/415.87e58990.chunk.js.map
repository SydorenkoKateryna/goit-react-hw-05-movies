{"version":3,"file":"static/js/415.87e58990.chunk.js","mappings":"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","sources":["api/getMovies.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${params.toString()}&query=${query}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    padding-bottom: 60px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(240px, 336px));\n  grid-row-gap: 20px;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(2, 336px);\n    grid-column-gap: 32px;\n    grid-row-gap: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    grid-template-columns: repeat(3, 395px);\n    grid-column-gap: 16px;\n    grid-row-gap: 32px;\n  }\n`;\n\nexport const Item = styled.li`\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: 0 2 10px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 402px;\n  object-fit: cover;\n\n  @media (min-width: 768px) {\n    height: 455px;\n  }\n  @media (min-width: 1280px) {\n    height: 574px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  padding: 16px 8px;\n`;\n\nexport const SecondTitle = styled.h2`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #212121;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 18px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Section,\n  List,\n  Item,\n  Image,\n  Title,\n  InfoWrapper,\n  SecondTitle,\n} from './MovieList.styled';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieList = ({ movies, title }) => {\n  const location = useLocation();\n\n  return (\n    <Section>\n      {title && <Title>{title}</Title>}\n\n      <List>\n        {movies.map(({ id, poster_path, title }) => {\n          return (\n            <Item key={id}>\n              <Link\n                to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n                state={{ from: location }}\n              >\n                <Image\n                  src={\n                    poster_path\n                      ? `${IMG_URL}${poster_path}`\n                      : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                  }\n                  alt={title}\n                />\n                <InfoWrapper>\n                  <SecondTitle>\n                    {title.length <= 30 ? title : `${title.slice(0, 30)} ...`}\n                  </SecondTitle>\n                </InfoWrapper>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </Section>\n  );\n};\n\nMovieList.propTypes = {\n  title: PropTypes.string,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'api/getMovies';\nimport MovieList from 'components/MovieList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (trendingMovies) {\n      return;\n    }\n\n    const getData = async () => {\n      try {\n        const {\n          data: { results },\n        } = await getTrendingMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    getData();\n  }, [trendingMovies]);\n\n  return (\n    <main>\n      {error && <h1>{error.message}</h1>}\n\n      {trendingMovies && (\n        <MovieList movies={trendingMovies} title=\"Trending today\" />\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","Section","styled","List","Item","Image","Title","InfoWrapper","SecondTitle","movies","title","location","useLocation","map","poster_path","to","pathname","state","from","src","alt","length","slice","useState","trendingMovies","setTrendingMovies","error","setError","useEffect","getData","results","data","message"],"sourceRoot":""}