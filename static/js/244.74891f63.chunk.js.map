{"version":3,"file":"static/js/244.74891f63.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAS,IAAIC,gBAAgB,CACjCC,QAAS,mCACTC,KAAM,IAGKC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBN,EADkB,8BACYC,EAAOM,aAFX,UAKP,OAJlBC,EADyB,QAKlBC,OALkB,sBAMvB,IAAIC,MAAMF,EAASC,QANI,gCASxBD,GATwB,2CAAH,qDAYjBG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,YACMX,EAAOM,aAFP,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFlB,UAKF,OAJlBC,EADoB,QAKbC,OALa,sBAMlB,IAAIC,MAAMF,EAASC,QAND,gCASnBD,GATmB,2CAAH,sDAYZM,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFf,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfO,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,UAClBN,EADkB,yBACOC,EAAOM,WADd,kBACkCS,IAF5B,UAKL,OAJlBR,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,qD,sECtDfS,E,QAAUC,GAAAA,OAAH,uZ,SCSpB,EARc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,UAACF,EAAD,WAAS,8BAA4BE,EAAQ,MACrD,C,6LCHYC,EAAOF,EAAAA,GAAAA,EAAH,gPAgBJG,EAAOH,EAAAA,GAAAA,GAAH,6CAIJI,EAAOJ,EAAAA,GAAAA,GAAH,kRAkBJK,EAASL,EAAAA,GAAAA,GAAH,6EAKNM,EAASN,EAAAA,GAAAA,EAAH,sB,SCcnB,EApDgB,WACd,IAAQN,GAAOa,EAAAA,EAAAA,MAAPb,GACR,GAAkCc,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACRL,GAAa,GAEb,IAAMM,EAAO,mCAAG,gHAEWpB,EAAAA,EAAAA,IAAgBF,GAF3B,OAENJ,EAFM,OAIF2B,EACN3B,EADF4B,KAAQD,QAEVL,EAAgBK,GAChBP,GAAa,GAPD,gDASZI,EAAS,EAAD,IACRJ,GAAa,GAVD,yDAAH,qDAcbM,GACD,GAAE,CAACtB,KAGF,gCACGe,IAAa,SAACU,EAAA,EAAD,IAEbN,IAAS,SAACrB,EAAA,EAAD,CAAOS,QAASY,EAAMZ,YAE7BU,IAAiBA,EAAaS,UAAYX,IAC3C,SAACP,EAAD,UAAM,8CAGPS,IAAiBF,IAChB,SAACN,EAAD,UACGQ,EAAaU,KAAI,YAA8B,IAA3B3B,EAA0B,EAA1BA,GAAI4B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,UAACnB,EAAD,YACE,UAACC,EAAD,WAAQ,WAASiB,MACjB,SAAChB,EAAD,UAASiB,MAFA7B,EAKd,QAKV,C","sources":["api/getMovies.js","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${params.toString()}&query=${query}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.strong`\n  display: block;\n  padding-top: 20px;\n  padding-bottom: 40px;\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  text-align: center;\n  color: #212121;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    padding-bottom: 60px;\n    font-size: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Error.styled';\n\nconst Error = ({ message }) => {\n  return <Message>Sorry, there was an error. {message}.</Message>;\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const Info = styled.p`\n  margin-top: 20px;\n\n  font-weight: 500;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 18px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 18px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Author = styled.h3`\n  margin-bottom: 8px;\n  text-transform: uppercase;\n`;\n\nexport const Review = styled.p``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/getMovies';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\nimport { Info, List, Item, Author, Review } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getData = async () => {\n      try {\n        const response = await getMovieReviews(id);\n        const {\n          data: { results },\n        } = response;\n        setMovieReviews(results);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {error && <Error message={error.message} />}\n\n      {(!movieReviews || !movieReviews.length) && !isLoading && (\n        <Info>We don't have any reviews for this movie.</Info>\n      )}\n\n      {movieReviews && !isLoading && (\n        <List>\n          {movieReviews.map(({ id, author, content }) => {\n            return (\n              <Item key={id}>\n                <Author>Author: {author}</Author>\n                <Review>{content}</Review>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","Message","styled","message","Info","List","Item","Author","Review","useParams","useState","isLoading","setIsLoading","movieReviews","setMovieReviews","error","setError","useEffect","getData","results","data","Loader","length","map","author","content"],"sourceRoot":""}