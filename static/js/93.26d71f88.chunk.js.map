{"version":3,"file":"static/js/93.26d71f88.chunk.js","mappings":"kTAEMA,EAAW,gCACXC,EAAS,IAAIC,gBAAgB,CACjCC,QAAS,mCACTC,KAAM,IAGKC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBN,EADkB,8BACYC,EAAOM,aAFX,UAKP,OAJlBC,EADyB,QAKlBC,OALkB,sBAMvB,IAAIC,MAAMF,EAASC,QANI,gCASxBD,GATwB,2CAAH,qDAYjBG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,YACMX,EAAOM,aAFP,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFlB,UAKF,OAJlBC,EADoB,QAKbC,OALa,sBAMlB,IAAIC,MAAMF,EAASC,QAND,gCASnBD,GATmB,2CAAH,sDAYZM,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFf,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfO,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,UAClBN,EADkB,yBACOC,EAAOM,WADd,kBACkCS,IAF5B,UAKL,OAJlBR,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,qD,oLCtDfS,EAAOC,EAAAA,GAAAA,GAAH,ubAqBJC,EAAOD,EAAAA,GAAAA,GAAH,8HAOJE,EAAQF,EAAAA,GAAAA,IAAH,+TAmBLG,EAAOH,EAAAA,GAAAA,GAAH,mEAKJI,EAAYJ,EAAAA,GAAAA,EAAH,sB,SCGtB,EAjDa,WACX,IAAQN,GAAOW,EAAAA,EAAAA,MAAPX,GACR,GAAkCY,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,gHAEWjB,EAAAA,EAAAA,IAAaD,GAFxB,OAENJ,EAFM,OAIFuB,EACNvB,EADFwB,KAAQD,KAEVL,EAAaK,GAND,gDAQZH,EAAS,EAAD,IARI,yDAAH,qDAYbE,GACD,GAAE,CAAClB,KAGF,gCACGe,IAAS,SAACjB,EAAA,EAAD,CAAOuB,QAASN,EAAMM,UAE/BR,IACC,SAACR,EAAD,UACGQ,EAAUS,KAAI,YAAqD,IAAlDtB,EAAiD,EAAjDA,GAAIuB,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACjD,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IACEH,EAAY,UAlChB,mCAkCgB,OACKA,GACb,kHAENI,IAAKH,KAEP,SAACf,EAAD,UAAOe,KACP,UAACd,EAAD,WAAW,cAAYe,OAVdzB,EAad,QAKV,C,sECrDY4B,E,QAAUtB,GAAAA,OAAH,uZ,SCSpB,EARc,SAAC,GAAiB,IAAfe,EAAc,EAAdA,QACf,OAAO,UAACO,EAAD,WAAS,8BAA4BP,EAAQ,MACrD,C","sources":["api/getMovies.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${params.toString()}&query=${query}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n\n  display: grid;\n  grid-template-columns: repeat(1, minmax(240px, 336px));\n  grid-row-gap: 20px;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(4, 161px);\n    grid-column-gap: 20px;\n    grid-row-gap: 20px;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    grid-template-columns: repeat(5, 226px);\n    grid-column-gap: 21.5px;\n  }\n`;\n\nexport const Item = styled.li`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  text-transform: uppercase;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 402px;\n  object-fit: cover;\n  border-radius: 2px;\n\n  @media (min-width: 768px) {\n    max-width: 161px;\n    width: 100%;\n    height: 240px;\n  }\n  @media (min-width: 1280px) {\n    max-width: 226px;\n    width: 100%;\n    height: 350px;\n  }\n`;\n\nexport const Name = styled.h3`\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nexport const Character = styled.p``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'api/getMovies';\nimport Error from 'components/Error';\nimport { List, Item, Image, Name, Character } from './Cast.styled';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [movieCast, setMovieCast] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await getMovieCast(id);\n        const {\n          data: { cast },\n        } = response;\n        setMovieCast(cast);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    getData();\n  }, [id]);\n\n  return (\n    <>\n      {error && <Error message={error.message} />}\n\n      {movieCast && (\n        <List>\n          {movieCast.map(({ id, profile_path, original_name, character }) => {\n            return (\n              <Item key={id}>\n                <Image\n                  src={\n                    profile_path\n                      ? `${IMG_URL}${profile_path}`\n                      : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                  }\n                  alt={original_name}\n                />\n                <Name>{original_name}</Name>\n                <Character>Character: {character}</Character>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Message = styled.strong`\n  display: block;\n  padding-top: 20px;\n  padding-bottom: 40px;\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  text-align: center;\n  color: #212121;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    padding-bottom: 60px;\n    font-size: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Error.styled';\n\nconst Error = ({ message }) => {\n  return <Message>Sorry, there was an error. {message}.</Message>;\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Error;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","List","styled","Item","Image","Name","Character","useParams","useState","movieCast","setMovieCast","error","setError","useEffect","getData","cast","data","message","map","profile_path","original_name","character","src","alt","Message"],"sourceRoot":""}