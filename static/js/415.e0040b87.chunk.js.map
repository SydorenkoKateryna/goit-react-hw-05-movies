{"version":3,"file":"static/js/415.e0040b87.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAS,IAAIC,gBAAgB,CACjCC,QAAS,mCACTC,KAAM,IAGKC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBN,EADkB,8BACYC,EAAOM,aAFX,UAKP,OAJlBC,EADyB,QAKlBC,OALkB,sBAMvB,IAAIC,MAAMF,EAASC,QANI,gCASxBD,GATwB,2CAAH,qDAYjBG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,YACMX,EAAOM,aAFP,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFlB,UAKF,OAJlBC,EADoB,QAKbC,OALa,sBAMlB,IAAIC,MAAMF,EAASC,QAND,gCASnBD,GATmB,2CAAH,sDAYZM,EAAe,mCAAG,WAAMF,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,oBACcX,EAAOM,aAFf,UAKL,OAJlBC,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfO,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,UAClBN,EADkB,yBACOC,EAAOM,WADd,kBACkCS,IAF5B,UAKL,OAJlBR,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,qD,wFCT5B,EA1CkB,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,YAAiC,IAA9BR,EAA6B,EAA7BA,GAAIS,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC9B,OACE,yBACE,UAAC,KAAD,CACEC,GAA0B,MAAtBL,EAASM,SAAT,iBAAsCZ,GAAtC,UAAgDA,GACpDa,MAAO,CAAEC,KAAMR,GAFjB,WAIE,0BACE,gBACES,IACEN,EAAW,UAjBf,mCAiBe,OACMA,GACb,kHAENO,IAAKN,EACLO,MAAM,WAGV,wBAAKP,QAhBAV,EAoBZ,KAGN,C,gHCLD,UA1Ba,WACX,OAA4CkB,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAIF,EAAJ,CAIA,IAAMG,EAAO,mCAAG,uGAGJ7B,EAAAA,EAAAA,MAHI,gBAEJ8B,EAFI,EAEZC,KAAQD,QAEVH,EAAkBG,GAJJ,2CAAH,qDAObD,GATC,CAUF,GAAE,CAACH,KAGF,6BACE,wBAAI,mBACHA,IAAkB,SAAC,IAAD,CAAWd,OAAQc,MAG3C,C","sources":["api/getMovies.js","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst params = new URLSearchParams({\n  api_key: 'ee704e183d11b50a0d8be9a20340402f',\n  page: 1,\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${params.toString()}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${params.toString()}&query=${query}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, poster_path, title }) => {\n        return (\n          <li key={id}>\n            <Link\n              to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n            >\n              <div>\n                <img\n                  src={\n                    poster_path\n                      ? `${IMG_URL}${poster_path}`\n                      : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                  }\n                  alt={title}\n                  width=\"500\"\n                />\n              </div>\n              <h2>{title}</h2>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'api/getMovies';\nimport MovieList from 'components/MovieList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n\n  useEffect(() => {\n    if (trendingMovies) {\n      return;\n    }\n\n    const getData = async () => {\n      const {\n        data: { results },\n      } = await getTrendingMovies();\n      setTrendingMovies(results);\n    };\n\n    getData();\n  }, [trendingMovies]);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {trendingMovies && <MovieList movies={trendingMovies} />}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","params","URLSearchParams","api_key","page","getTrendingMovies","axios","toString","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","movies","location","useLocation","map","poster_path","title","to","pathname","state","from","src","alt","width","useState","trendingMovies","setTrendingMovies","useEffect","getData","results","data"],"sourceRoot":""}