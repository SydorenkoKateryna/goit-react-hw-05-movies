{"version":3,"file":"static/js/522.f253eb42.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,WAAMC,GAAN,uFACRC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,sCACoBC,EADpB,iBACoCE,IAF5B,UAKP,OAJlBE,EADyB,QAKlBC,OALkB,sBAMvB,IAAIC,MAAMF,EAASC,QANI,gCASxBD,GATwB,2CAAH,sDAYjBG,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAS,EADA,oBACcR,IAFR,UAKL,OAJlBI,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfK,EAAY,mCAAG,WAAMD,GAAN,uFACHL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAS,EADA,4BACsBR,IAFnB,UAKF,OAJlBI,EADoB,QAKbC,OALa,sBAMlB,IAAIC,MAAMF,EAASC,QAND,gCASnBD,GATmB,2CAAH,sDAYZM,EAAe,mCAAG,WAAMF,GAAN,uFACNL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAS,EADA,4BACsBR,IAFhB,UAKL,OAJlBI,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,sDAYfO,EAAe,mCAAG,WAAOC,EAAOV,GAAd,uFACNC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBACgCY,EADhC,iBAC8CV,IAFxC,UAKL,OAJlBE,EADuB,QAKhBC,OALgB,sBAMrB,IAAIC,MAAMF,EAASC,QANE,gCAStBD,GATsB,2CAAH,uD,sECnDfS,E,QAAUC,GAAAA,OAAH,mZAST,qBAAGC,MAAkBC,OAAOC,KAA5B,I,SCAX,EARc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,UAACL,EAAD,WAAS,8BAA4BK,EAAQ,MACrD,C,gHCHYC,EAAUL,EAAAA,GAAAA,QAAH,2KAUPM,EAAON,EAAAA,GAAAA,GAAH,ubAoBJO,EAAOP,EAAAA,GAAAA,GAAH,oTACK,qBAAGC,MAAkBC,OAAOM,cAA5B,IAaTC,EAAQT,EAAAA,GAAAA,IAAH,sNAcLU,EAAQV,EAAAA,GAAAA,GAAH,gQAaLW,EAAcX,EAAAA,GAAAA,IAAH,8CAIXY,EAAcZ,EAAAA,GAAAA,GAAH,0PAKb,qBAAGC,MAAkBC,OAAOC,KAA5B,I,SCrELU,EACJ,kHAkDF,EAhDkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACZ,EAAD,WACGU,IAAS,SAACL,EAAD,UAAQK,KAElB,SAACT,EAAD,UACGQ,EAAOI,KAAI,YAAiC,IAA9BxB,EAA6B,EAA7BA,GAAIyB,EAAyB,EAAzBA,YAAaJ,EAAY,EAAZA,MAC9B,OACE,SAACR,EAAD,WACE,UAAC,KAAD,CACEa,GAA0B,MAAtBJ,EAASK,SAAT,iBAAsC3B,GAAtC,UAAgDA,GACpD4B,MAAO,CAAEC,KAAMP,GAFjB,WAIE,SAACP,EAAD,CACEe,IAAKT,EACLU,IAAKN,EAAW,UArBlB,mCAqBkB,OAAgBA,GAAgBN,EAChDa,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cACVA,EAAcC,QAAU,KACxBD,EAAcF,IAAMZ,CACrB,KAEH,SAACF,EAAD,WACE,SAACC,EAAD,UACGG,EAAMc,QAAU,GAAKd,EAArB,UAAgCA,EAAMe,MAAM,EAAG,IAA/C,gBAfEpC,EAqBd,QAIR,C,4LCjDYqC,EAAU/B,EAAAA,GAAAA,IAAH,4GAQPgC,EAAOhC,EAAAA,GAAAA,KAAH,+TAKK,qBAAGC,MAAkBC,OAAO+B,cAA5B,IACV,qBAAGhC,MAAkBC,OAAOgC,MAA5B,IAOCC,EAAQnC,EAAAA,GAAAA,MAAH,obASP,qBAAGC,MAAkBC,OAAOC,KAA5B,IAiBEiC,EAASpC,EAAAA,GAAAA,OAAH,mYAOR,qBAAGC,MAAkBC,OAAOC,KAA5B,IACW,qBAAGF,MAAkBC,OAAO+B,cAA5B,I,mBCVtB,EAzCkB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,SAACT,EAAD,WACE,UAACC,EAAD,CAAMK,SAjBW,SAAAI,GACnBA,EAAEC,iBAEF,IAAMC,EAAkBJ,EAAMK,OAEN,KAApBD,GAKJN,EAASM,GAETH,EAAS,KANPK,EAAAA,GAAAA,KAAW,0CAOd,EAIG,WACE,SAACV,EAAD,CACEW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZV,MAAOA,EACPW,SAAU,SAAAT,GAAC,OAAID,EAASC,EAAEU,OAAOZ,MAAtB,KAEb,SAACH,EAAD,CAAQU,KAAK,SAAb,UACE,SAAC,MAAD,CAAUM,KAAM,WAKzB,E,iDCyED,EAxGe,WAAO,IAAD,IACnB,GAAwCd,EAAAA,EAAAA,UAAS,MAAjD,eAAOe,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BnB,EAAAA,EAAAA,UAAS,MAAnC,eAAOoB,EAAP,KAAcC,EAAd,KACMC,EAAS,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GACzCzE,EAAI,UAAGoE,EAAaK,IAAI,eAApB,QAA+B,IACzC,GAAwCvB,EAAAA,EAAAA,UAAS,MAAjD,eAAOwB,EAAP,KAAqBC,EAArB,KAEMC,EAAYC,KAAKC,KAAKJ,EAAeA,EADtB,GACoD,GAiEzE,OAzCAK,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdP,EAAJ,CAIA,IAAMQ,EAAO,mCAAG,oHAEWvE,EAAAA,EAAAA,IAAgB+D,EAAWxE,GAFtC,UAENE,EAFM,SAKRA,EADF+E,KAAQC,EAJE,EAIFA,QAGY,KAHHC,EAJP,EAIOA,eAJP,uBAQVjB,EAAgB,MAChBT,EAAAA,GAAAA,MACE,6EAVQ,0BAeZS,EAAgBgB,GAEhBE,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,WAIVb,EADEQ,EAAgB,IACF,IAEAA,GA1BN,kDA6BZZ,EAAS,EAAD,IA7BI,0DAAH,qDAiCbS,GAnCC,CAoCF,GAAE,CAACR,EAAWxE,KAGb,kBAAMyF,MAAO,CAAEC,cAAe,QAA9B,WACE,SAAC,EAAD,CAAWzC,SAjEW,SAAAvC,GACxB,GAAIA,IAAU8D,EAAd,CAIA,IAAMmB,EAAuB,KAAVjF,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C2D,GAAgB,kBACXsB,GADU,IAEb3F,KAAM,IANP,CAQF,IAwDIsE,IAAS,SAAClE,EAAA,EAAD,CAAOY,QAASsD,EAAMtD,UAE/BiD,IAAiBK,IAChB,iCACE,SAACsB,EAAA,EAAD,CAAWlE,OAAQuC,IAElBW,EAAY,IACX,SAAC,IAAD,CACEiB,WAAW,MACXC,WAAW,SAAC,MAAD,CAAqB9B,KAAM,KACtC+B,aAhEY,SAAAC,GACtB3B,GAAgB,SAAA4B,GACd,OAAO,IAAIC,iBAAJ,kBACFC,OAAOC,YAAYH,EAAWI,YAD5B,IAELrG,KAAMgG,EAAMM,SAAW,IAE1B,GACF,EA0DWC,mBAAoB,EACpB3B,UAAWA,EACX4B,UAAWxG,EAAO,EAClByG,eAAe,SAAC,MAAD,CAAoBzC,KAAM,KACzC0C,sBAAuB,KACvBC,mBAAmB,kBACnBC,kBAAkB,uBAClBC,gBAAgB,0BAO7B,C","sources":["api/getMovies.js","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ee704e183d11b50a0d8be9a20340402f';\n\nexport const getTrendingMovies = async page => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.strong`\n  display: block;\n  padding-top: 20px;\n  padding-bottom: 40px;\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-transform: uppercase;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.color};\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    padding-bottom: 60px;\n    font-size: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Error.styled';\n\nconst Error = ({ message }) => {\n  return <Message>Sorry, there was an error. {message}.</Message>;\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    padding-bottom: 60px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(240px, 336px));\n  grid-row-gap: 20px;\n\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(2, 336px);\n    grid-column-gap: 32px;\n    grid-row-gap: 32px;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    grid-template-columns: repeat(3, 395px);\n    grid-column-gap: 16px;\n    grid-row-gap: 32px;\n  }\n`;\n\nexport const Item = styled.li`\n  background-color: ${({ theme }) => theme.colors.cardBackground};\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  border-radius: 2px;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: 0 2 10px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 402px;\n  object-fit: cover;\n\n  @media (min-width: 768px) {\n    height: 455px;\n  }\n  @media (min-width: 1280px) {\n    height: 574px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  padding: 16px 8px;\n`;\n\nexport const SecondTitle = styled.h2`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.color};\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 18px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Section,\n  List,\n  Item,\n  Image,\n  Title,\n  InfoWrapper,\n  SecondTitle,\n} from './MovieList.styled';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMAGE =\n  'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n\nconst MovieList = ({ movies, title }) => {\n  const location = useLocation();\n\n  return (\n    <Section>\n      {title && <Title>{title}</Title>}\n\n      <List>\n        {movies.map(({ id, poster_path, title }) => {\n          return (\n            <Item key={id}>\n              <Link\n                to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n                state={{ from: location }}\n              >\n                <Image\n                  alt={title}\n                  src={poster_path ? `${IMG_URL}${poster_path}` : DEFAULT_IMAGE}\n                  onError={({ currentTarget }) => {\n                    currentTarget.onerror = null;\n                    currentTarget.src = DEFAULT_IMAGE;\n                  }}\n                />\n                <InfoWrapper>\n                  <SecondTitle>\n                    {title.length <= 30 ? title : `${title.slice(0, 30)} ...`}\n                  </SecondTitle>\n                </InfoWrapper>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </Section>\n  );\n};\n\nMovieList.propTypes = {\n  title: PropTypes.string,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding-top: 20px;\n\n  @media (min-width: 768px) {\n    padding-top: 32px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: ${({ theme }) => theme.colors.formBackground};\n  border: ${({ theme }) => theme.colors.border};\n  border-radius: 2px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.5),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.1), 0px 1px 10px 0px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-family: inherit;\n  font-size: 12px;\n  border: none;\n  outline: none;\n  padding: 0px 8px;\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.color};\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  &::placeholder {\n    font-family: inherit;\n    font-size: inherit;\n    color: inherit;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  color: ${({ theme }) => theme.colors.color};\n  background-color: ${({ theme }) => theme.colors.formBackground};\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Wrapper, Input, Form, Button } from './Searchbar.styled';\nimport { FiSearch } from 'react-icons/fi';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const normalizedValue = value.trim();\n\n    if (normalizedValue === '') {\n      toast.info('Please, enter keywords to find a movie.');\n      return;\n    }\n\n    onSubmit(normalizedValue);\n\n    setValue('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Find a movie to watch...\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n        <Button type=\"submit\">\n          <FiSearch size={24} />\n        </Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport MovieList from 'components/MovieList';\nimport Searchbar from 'components/Searchbar';\nimport Error from 'components/Error';\nimport { getSearchMovies } from 'api/getMovies';\nimport ReactPaginate from 'react-paginate';\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from 'react-icons/ai';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const movieName = searchParams.get('query') ?? '';\n  const page = searchParams.get('page') ?? '1';\n  const [totalResults, setTotalResults] = useState(null);\n  const itemsPerPage = 20;\n  const pageCount = Math.ceil(totalResults ? totalResults / itemsPerPage : 0);\n\n  const updateQueryString = query => {\n    if (query === movieName) {\n      return;\n    }\n\n    const nextParams = query !== '' ? { query } : {};\n\n    setSearchParams({\n      ...nextParams,\n      page: 1,\n    });\n  };\n\n  const handlePageClick = event => {\n    setSearchParams(prevParams => {\n      return new URLSearchParams({\n        ...Object.fromEntries(prevParams.entries()),\n        page: event.selected + 1,\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n\n    const getData = async () => {\n      try {\n        const response = await getSearchMovies(movieName, page);\n        const {\n          data: { results, total_results },\n        } = response;\n\n        if (total_results === 0) {\n          setSearchMovies(null);\n          toast.error(\n            'Sorry, there are no movies matching your search query. Please, try again.'\n          );\n          return;\n        }\n\n        setSearchMovies(results);\n\n        window.scrollTo({\n          top: 0,\n          left: 0,\n          behavior: 'smooth',\n        });\n\n        if (total_results > 10000) {\n          setTotalResults(10000);\n        } else {\n          setTotalResults(total_results);\n        }\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    getData();\n  }, [movieName, page]);\n\n  return (\n    <main style={{ paddingBottom: '60px' }}>\n      <Searchbar onSubmit={updateQueryString} />\n\n      {error && <Error message={error.message} />}\n\n      {searchMovies && !error && (\n        <>\n          <MovieList movies={searchMovies} />\n\n          {pageCount > 1 && (\n            <ReactPaginate\n              breakLabel=\"...\"\n              nextLabel={<AiOutlineArrowRight size={15} />}\n              onPageChange={handlePageClick}\n              pageRangeDisplayed={1}\n              pageCount={pageCount}\n              forcePage={page - 1}\n              previousLabel={<AiOutlineArrowLeft size={15} />}\n              renderOnZeroPageCount={null}\n              containerClassName=\"containerStyled\"\n              disabledClassName=\"disabledButtonStyled\"\n              activeClassName=\"activePageStyled\"\n            />\n          )}\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","page","axios","response","status","Error","getMovieDetails","id","getMovieCast","getMovieReviews","getSearchMovies","query","Message","styled","theme","colors","color","message","Section","List","Item","cardBackground","Image","Title","InfoWrapper","SecondTitle","DEFAULT_IMAGE","movies","title","location","useLocation","map","poster_path","to","pathname","state","from","alt","src","onError","currentTarget","onerror","length","slice","Wrapper","Form","formBackground","border","Input","Button","onSubmit","useState","value","setValue","e","preventDefault","normalizedValue","trim","toast","type","autoComplete","autoFocus","placeholder","onChange","target","size","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","error","setError","movieName","get","totalResults","setTotalResults","pageCount","Math","ceil","useEffect","getData","data","results","total_results","window","scrollTo","top","left","behavior","style","paddingBottom","nextParams","MovieList","breakLabel","nextLabel","onPageChange","event","prevParams","URLSearchParams","Object","fromEntries","entries","selected","pageRangeDisplayed","forcePage","previousLabel","renderOnZeroPageCount","containerClassName","disabledClassName","activeClassName"],"sourceRoot":""}